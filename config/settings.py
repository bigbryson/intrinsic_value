"""
Django settings for web_project project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
import random
import string
from pathlib import Path

from dotenv import load_dotenv

from .template import  THEME_LAYOUT_DIR, THEME_VARIABLES

load_dotenv()  # take environment variables from .env.

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/


# Update secret key in .env file and .env.prod file
# SECRET_KEY = os.environ.get("SECRET_KEY", default='')

# SECURITY WARNING: keep the secret key used in production secret!
# If using the .env file for SECRET_KEY then comment below random SECRET_KEY generation code.
SECRET_KEY = os.environ.get("SECRET_KEY")
if not SECRET_KEY:
    SECRET_KEY = "".join(random.choice(string.ascii_lowercase) for i in range(32))


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", 'True').lower() in ['true', 'yes', '1']



# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ["localhost", "0.0.0.0", "127.0.0.1", "1b84d4190a2e.ngrok-free.app"]

# Add your ngrok URL to CSRF_TRUSTED_ORIGINS
CSRF_TRUSTED_ORIGINS = ['https://1b84d4190a2e.ngrok-free.app']

# Automatic ngrok URL configuration for development
# These settings tell Django to trust the X-Forwarded-Proto header from ngrok
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = False # Recommended to be False for development
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# Current DJANGO_ENVIRONMENT
ENVIRONMENT = os.environ.get("DJANGO_ENVIRONMENT", default="local")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.dashboards",
    "apps.layouts",
    "apps.pages",
    "apps.authentication",
    "apps.cards",
    "apps.ui",
    "apps.extended_ui",
    "apps.icons",
    "apps.forms",
    "apps.form_layouts",
    "apps.tables",
    "apps.connection_page",
    "apps.grahams_table",
    "apps.holdings",
    "apps.transactions",
    "apps.savings",
    "apps.goals",
    "apps.financials",
    "django_extensions",
    "django_ngrok",
    "widget_tweaks",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # Add the line below to tell Django where to find the 'layouts' folder
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "config.context_processors.my_setting",
                "config.context_processors.environment",
                "config.context_processors.layout_path",

            ],
            "libraries": {
                "theme": "web_project.template_tags.theme",
            },
            "builtins": [
                "django.templatetags.static",
                "web_project.template_tags.theme",
                "django.templatetags.i18n",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"


STATICFILES_DIRS = [
    BASE_DIR / "src" / "assets",
]

# Default URL on which Django application runs for specific environment
BASE_URL = os.environ.get("BASE_URL", default="http://127.0.0.1:8000")


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Template Settings
# ------------------------------------------------------------------------------

THEME_LAYOUT_DIR = THEME_LAYOUT_DIR
THEME_VARIABLES = THEME_VARIABLES



# Your stuff...

DOLT_EARNINGS_DATA_PATH = r'E:\Stock History' # From your stock_data_gui.py

DOLTHUB_FILENAMES_CONFIG = { # From your stock_data_gui.py
    "assets": "balance_sheet_assets.csv",
    "equity": "balance_sheet_equity.csv",
    "liabilities": "balance_sheet_liabilities.csv",
    "cash_flow": "cash_flow_statement.csv",
    "eps_history": "eps_history.csv",
    "income_statement": "income_statement.csv",
    # Add other filenames if they become necessary for calculations
}
CURRENT_AAA_BOND_YIELD = 4.5
ANNUAL_REPORT_PERIOD_INDICATOR = 'Year'

# Path to the file containing all tickers (if still used in this manner)
ALL_TICKERS_FILE_PATH = os.path.join(DOLT_EARNINGS_DATA_PATH, "all_tickers.txt")

# For yfinance, no specific API keys are usually needed, but good to note
# YFINANCE_SETTINGS = {}

# ------------------------------------------------------------------------------
# config/settings.py
FINNHUB_API_KEY = 'd1631g9r01qhsocmdas0d1631g9r01qhsocmdasg'
# Webhook
URL_WEBHOOK_SECRET = 'd1631g9r01qhsocmdatg'

# E*TRADE API Credentials
ETRADE_CONSUMER_KEY='af085ade91855a0c03acb7a314bc84b7' #your_etrade_api_key''
ETRADE_CONSUMER_SECRET='80e7b374c7d5eb95d880a34f0e2b44c432748e8c6eab83eb87297fa37ef4c7db' #your_etrade_secret_key''

# Charles Schwab API Credentials
SCHWAB_APP_KEY='M1nYoqHUuH8MprFfDM1VlMp22jrbCnAT'

SCHWAB_APP_SECRET='uCBaAkaGQSBWSsCS'

LOGIN_URL = '/accounts/auth/login/'

#Sandbox Authentication

# Yodlee API Credentials
# /config/settings.py

# ... other settings ...

# Yodlee API Credentials
YODLEE_ADMINLOGINNAME = os.environ.get("YODLEE_ADMINLOGINNAME")
YODLEE_CLIENT_ID = os.environ.get("YODLEE_CLIENT_ID")
YODLEE_SECRET = os.environ.get("YODLEE_SECRET")
YODLEE_API_URL = "https://sandbox.api.yodlee.com/ysl" # Sandbox URL

# ------------------------------------------------------------------------------
